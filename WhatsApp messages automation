from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import openpyxl


# Function to read contacts from Excel file
def read_contacts(file_path):
    workbook = openpyxl.load_workbook(file_path)
    contacts_sheet = workbook["Contacts"]

    contacts = []
    for row in contacts_sheet.iter_rows(min_row=2, values_only=True):
        name, full_phone_number = row

        # Convert the phone number to a string and extract the digits starting from the third position
        phone_number = str(full_phone_number)[2:]

        contacts.append({"name": name, "phone_number": phone_number})

    return contacts


# Function to send WhatsApp message
def send_whatsapp_message(contact, message, driver):
    try:
        # Locate the contact search bar and send the contact name
        search_bar = driver.find_element("xpath", "//div[@contenteditable='true']")
        search_bar.send_keys(contact["name"])
        time.sleep(5)  # Increased sleep time to 5 seconds
        search_bar.send_keys(Keys.RETURN)
        time.sleep(5)  # Increased sleep time to 5 seconds

        # Wait until the message input element is present (with a timeout of 10 seconds)
        message_input_xpath = "//div[contains(@contenteditable,'true')][contains(@data-tab,'1')]"
        message_input = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, message_input_xpath))
        )

        # Click on the message input to ensure focus
        message_input.click()

        # Send the message
        personalized_message = message["content"].replace("{name}", contact["name"])
        message_input.send_keys(personalized_message)
        message_input.send_keys(Keys.RETURN)
        time.sleep(5)  # Increased sleep time to 5 seconds

        print(f"Message sent to {contact['name']} ({contact['phone_number']}) using Selenium with Microsoft Edge.")
    except Exception as e:
        print(f"Failed to send message to {contact['name']}: {e}")


# Excel file path
file_path = "C:\\Users\\HP-i7\\Desktop\\whatsapp_automation.xlsx"

# Read contacts from Excel file
contacts = read_contacts(file_path)

# Set up the webdriver
driver = webdriver.Edge()  # You'll need to have Microsoft EdgeDriver installed

try:
    driver.get("https://web.whatsapp.com/")
    print("Scan the QR code and press Enter once logged in...")
    input("Press Enter when ready...")

    # Example usage: sending personalized messages to each contact
    for contact in contacts:
        send_time = time.time() + 10  # Adding 10 seconds to ensure it's in the future
        message_content = "Hello, {name}, this is a personalized message."

        # Send the message using Selenium
        send_whatsapp_message(contact, {"content": message_content}, driver)

        # Wait for a few seconds before sending the next message
        while time.time() < send_time:
            time.sleep(1)

    print("Messages sent successfully.")
finally:
    driver.quit()








